version: '3.1'
services:
    #Container for MySQl
    db: 
        image: mysql
        container_name: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE
        # volumes:
        #     - ./volumes/mysql_db:/var/lib/mysql
        environment:
            MYSQL_DATABASE: chat_api_development
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_USERNAME: root
            MYSQL_PASSWORD: admin
        ports:
            - "3307:3306"
        expose:
            - '3307'

    #Container for Elasticsearch
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
        container_name: elasticsearch
        restart: always
        hostname: elasticsearch
        environment:
            - discovery.type=single-node
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"    
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        ports:
            - 9250:9200
        expose:
            - '9250'
        # volumes:
        #     - ./volumes/es:/usr/share/elasticsearch/data

    # #Container for Redis
    redis:
        image: redis
        container_name: redis
        restart: always
        hostname: redis
        command: redis-server --appendonly yes
        # volumes:
        #     - "./volumes/redis:/data"

    #Container for Sidekiq
    sidekiq:
        build: 
            context: .
            dockerfile: Dockerfile
        container_name: sidekiq
        restart: always
        depends_on:
            - db
            - redis
        command: 'bundle exec sidekiq -C ./config/sidekiq.yml'
        volumes:
            - ".:/app"
        environment:
            ELASTICSEARCH_URL: "http://elasticsearch:9200/"
            ELASTICSEARCH_HOST: "elasticsearch"
            ELASTICSEARCH_PORT: 9200
            ES_HOST: es
            RAILS_ENV: "development"
            REDIS_URL: "redis://redis:6379/0"
            DB_NAME: chat_api_development
            DB_USER: root
            DB_PASSWORD: admin
            DB_PORT: 3306
            DB_HOST: db
            RAILS_MAX_THREADS: 5

    #Container for Rails
    app: 
        build:
            context: .
            dockerfile: Dockerfile
        container_name: chat_api
        restart: always
        command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
        ports: 
            - "3001:3000"
        expose:
            - '3001'
        volumes:
            - ".:/app"
        depends_on:
            - db
            - redis
            - sidekiq
            - elasticsearch
        environment:
            ELASTICSEARCH_URL: "http://elasticsearch:9200/"
            ELASTICSEARCH_HOST: "elasticsearch"
            ELASTICSEARCH_PORT: 9200
            ES_HOST: es
            RAILS_ENV: "development"
            REDIS_URL: "redis://redis:6379/0"
            DB_NAME: chat_api_development
            DB_USER: root
            DB_PASSWORD: admin
            DB_PORT: 3306
            DB_HOST: db
            RAILS_MAX_THREADS: 5